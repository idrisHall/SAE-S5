import{d as l,p as g,A as V,R as j,c as u,a as s,f as I,T as C,v as w,e as M,t as a,F as P,q as U,l as B,h as D,i as F,j as L,n as N,o as r}from"./index-BCYLosDA.js";import{l as R}from"./index-TjCxX7sJ.js";const T={key:0},G=["disabled"],z={key:1},J=["disabled"],q=["disabled"],O={key:0},H={key:1,style:{color:"red"}},K={key:0},Z={__name:"GameOnlineAffrontement",setup(Q){const n=R("http://localhost:3000"),i=l(""),d=l(""),c=l(""),v=l(""),m=l(!1),f=l(""),b=l([]),p=l([]),y=l(0),h=l("affrontementrandom"),_=l(""),k=l(""),E=async()=>{const e=D.currentUser;if(e){const o=F(L,`users/${e.uid}`);try{const t=await N(o);t.exists()&&(_.value=t.val().pseudo,k.value=e.uid)}catch(t){console.error("Erreur lors de la récupération du pseudo Firebase:",t)}}};g(()=>{E()});const S=()=>{n.emit("createSession",{mode:h.value,userId:k.value,pseudo:_.value},e=>{e.error?alert(`Erreur : ${e.error}`):(i.value=e.sessionId,c.value=e.randomWord,alert(`Session créée avec succès : ${e.sessionId}`))})},$=()=>{d.value.trim()&&n.emit("joinSession",{sessionId:d.value.trim(),userId:k.value,pseudo:_.value},e=>{e.error?alert(`Erreur : ${e.error}`):(i.value=d.value.trim(),c.value=e.randomWord,alert("Session rejointe avec succès !"))})},x=()=>{v.value.trim()&&i.value&&(n.emit("submitWord",{sessionId:i.value,submittedWord:v.value.trim()}),v.value="")},W=V(()=>[...b.value].sort((e,o)=>o.similarity-e.similarity));return g(()=>{n.on("updatePlayers",e=>{p.value=e}),n.on("updateGame",e=>{b.value.push({pseudo:e.pseudo,word:e.word,similarity:e.similarity}),y.value=e.totalAttempts}),n.on("gameEnd",e=>{m.value=!0,f.value=`${e.win} (${e.totalAttempts} ${e.totalAttempts>1?"coups":"coup"} au total !). Il remporte la partie !`}),n.on("resetGame",()=>{y.value=0,b.value=[],m.value=!1,f.value="",v.value=""})}),j(()=>{n.disconnect()}),(e,o)=>(r(),u("div",null,[o[4]||(o[4]=s("h1",null,"Lexitom",-1)),i.value?(r(),u("div",z,[s("p",null,[o[3]||(o[3]=M("ID de session : ")),s("strong",null,a(i.value),1)]),s("p",null,"Joueurs connectés : "+a(p.value.length),1),s("p",null,"Mot aléatoire : "+a(c.value),1),s("p",null,"Nombre total de coups : "+a(y.value),1),I(s("input",{"onUpdate:modelValue":o[2]||(o[2]=t=>v.value=t),placeholder:"Entrez un mot",disabled:m.value||p.value.length<2},null,8,J),[[w,v.value]]),s("button",{onClick:x,disabled:m.value||p.value.length<2},"Soumettre",8,q),s("ul",null,[s("ul",null,[(r(!0),u(P,null,U(W.value,(t,A)=>(r(),u("li",{key:A},[t.similarity!==void 0?(r(),u("span",O,a(t.pseudo)+' a soumis "'+a(t.word)+'" : '+a((t.similarity*100).toFixed(3))+"°",1)):(r(),u("span",H,'Le mot "'+a(t.word)+`" n'est pas dans le vocabulaire`,1))]))),128))])]),m.value?(r(),u("p",K,a(f.value)+' Le mot à deviner était "'+a(c.value)+'" !',1)):B("",!0)])):(r(),u("div",T,[I(s("input",{type:"radio",value:"affrontementrandom","onUpdate:modelValue":o[0]||(o[0]=t=>h.value=t),hidden:""},null,512),[[C,h.value]]),s("button",{onClick:S},"Créer une session"),I(s("input",{"onUpdate:modelValue":o[1]||(o[1]=t=>d.value=t),placeholder:"Entrez un ID de session"},null,512),[[w,d.value]]),s("button",{onClick:$,disabled:!d.value.trim()},"Rejoindre",8,G)]))]))}};export{Z as default};
